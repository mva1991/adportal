/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'vinayabhishek' at '10/12/17 7:45 PM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */


plugins {
    id "org.flywaydb.flyway" version "4.2.0"
}

flyway {
    url = 'jdbc:mysql://localhost:3306'
    user = 'root'
    schemas = ['ad']
    baselineOnMigrate = true
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'



war.baseName = 'adportal'
project.webAppDirName = 'WebContent'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.20'
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-servlet
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.20' 
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.20'

	// https://mvnrepository.com/artifact/commons-collections/commons-collections
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	
	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.0'

	// https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlets
	compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.4.7.v20170914'
	
	
}


war {      
    webXml = file('WebContent/WEB-INF/web.xml') 
}

sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
        }
    }
    
